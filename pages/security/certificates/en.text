h1.  What are certificates?

On the internet, a [[public key certificate->http://en.wikipedia.org/wiki/Public_key_certificate]] is needed in order to verify the identity of people or computers. These certificates are also called "SSL Certificates" or "Identity Certificates." We will just call them "certificates" here.

In particular, certificates are needed to establish secure connections. Without certificates, you would be able to ensure that no one else was listening, but you might be talking to the wrong computer altogether! All riseup.net servers and all riseup.net services allow or require secure connections. 

To make sure you are actually creating a secure connection with Riseup, you can follow the below steps to verify our certificates. This verification process is not required in order to use Riseup's services. However, without verification, you cannot be certain you actually are connecting to our servers, and you cannot be certain that your connections are secure.

h1.  How to verify Riseup's certificates are valid

To verify these fingerprints, you need to look at what your browser believes the fingerprints are for the certificates and compare them to what is listed below. If they are different, there is a problem. Be warned: a complete verification is difficult and requires an understanding of OpenPGP.

h2.  When should I verify these fingerprints?

You should verify these fingerprints whenever they change, or you are using a computer that you do not control (such as at an internet cafe, or a library). 


h2. basic verification

First find the fingerprint of Riseup's certificate in your browser. To do this in most browsers, is by clicking on the lock icon (located at the bottom of the window or in the URL location bar) or the red and black star icon (often located in the URL location bar). This should bring up details about the certificate being used, including the fingerprint. 

If you compare the fingerprint you see there, with what you see below, then you have done some basic verification. 

If you are interested in doing a complete verification, then you will need to follow a more complicated technical process involving knowedge of OpenPGP.

h2. complete verification

Warning: this process is pretty technical, it requires familiarity with OpenPGP and the command-line.

h3. import riseup's key

First you need to open a terminal/shell, how you do this depends on your system. If you do not know how, please ask someone or search on the internet to find out how.

The following instructions will demonstrate the commands you need to type in the terminal. The commands will be pre-pended with a '$' character, which is used to indicate the command/shell prompt. This prompt indicates that the system is waiting for you to type in a command. In your shell, your prompt may look different, it could be a number of different things, if it is not a '$' that is not a problem! Just use the command that follows this character in your shell. 

You need to import Riseup's key from a keyserver:

<code>
$ gpg --keyserver keys.riseup.net --recv-key 139A768E
</code>

If you get an error about gpg not being found, you will need to install the gnupg program before you can continue.

There is no particular reason that you should trust this key. You can see who has trusted it:

<code>
$ gpg --list-sigs 139A768E
</code>

h3. verify these instructions

Now that you have imported Riseup's public key, you can verify that the fingerprints listed on this page are really from riseup.net.

# "Download the signed certificate fingerprint statement":riseup-signed-certificate-fingerprints
# Then run this command in a terminal:
<code>$ gpg --verify riseup-signed-certificate-fingerprints</code>
# Type control-d
# You should get output that says:
<code>gpg: Good signature from "Riseup Networks <collective@riseup.net>"</code>

You should make sure that it says "Good signature" in the output! If this text has been altered, then this information should not be trusted.

Unless you have taken explicit steps to build a trust path to the Riseup Collective key, you will see a warning message similar to:

<pre>
  gpg: WARNING: This key is not certified with a trusted signature!
  gpg:          There is no indication that the signature belongs to the owner.
</pre>

However, you still should see the "Good signature".

h3. compare the fingerprints

Now that you verified that the above message contains the fingerprints for our certificate, you can compare this value to the value provided by your browser. You can get that value by either clicking on the lock icon in the URL bar, or by clicking our black and red star on the left side of the URL bar, then click "More Information" and then "View Certificate", you should find the fingerprints there. Compare these with what you see above on this page.

If the values match, and you trust the Riseup public PGP key, then you can be confident you are really communicating with riseup.net servers when using an application that uses RiseupCA.pem.

h1. I want to learn more!

Great, this is an important topic and we encourage you to read [[this piece->http://lair.fifthhorseman.net/~dkg/tls-centralization/]] which clearly articulates in a non-technical way the problems involved in certificate authorities as well as outlining some interesting suggestions for ways that the existing architecture and protocols can be tweaked just a little bit to change the situation for the better.
